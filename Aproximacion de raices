{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPdY0afoXIT7essSfO9rhsi",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/EmilianoCastelan/MetodosNumericos/blob/main/Untitled1.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "NM4m6zVb0Rw3"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "-8kplGUG0Tlm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import numpy as np"
      ],
      "metadata": {
        "id": "Fbia8ubM0VOB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def f1(x):\n",
        "  return np.cos(x)-x*np.exp(x)\n"
      ],
      "metadata": {
        "id": "s64h4Jxl0pG9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x=np.linspace(0,1,50)"
      ],
      "metadata": {
        "id": "unGTMJ7n11b2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x,[f1(i)for i in x])\n",
        "plt.axhline(0,color=\"black\")\n",
        "plt.axvline(0,color=\"black\")\n",
        "plt.xlim(0,1)\n",
        "plt.ylim(-1,1)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 269
        },
        "id": "LdcuasAr3_x4",
        "outputId": "269cad55-845e-4302-ffaa-0695b04a724d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X=np.linspace(0.5,0.60,11)\n",
        "for x in X:\n",
        "  print(x,f1(x))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5I2uXIUH_NB6",
        "outputId": "5d8592d7-2aca-4db8-9c7e-ab29e4eba6b7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.5 0.05322192654030866\n",
            "0.51 0.02344599822334925\n",
            "0.52 -0.00683519816577105\n",
            "0.53 -0.03762705305307079\n",
            "0.54 -0.06893502421599951\n",
            "0.55 -0.10076463776756184\n",
            "0.5599999999999999 -0.1331214891524003\n",
            "0.57 -0.16601124415496016\n",
            "0.58 -0.19943963991985558\n",
            "0.59 -0.23341248598457198\n",
            "0.6 -0.26793566532462687\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def f2(x):\n",
        "  return 10**x-x-4"
      ],
      "metadata": {
        "id": "LJa6rQYmroLq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x=np.linspace(-6,-3,50)"
      ],
      "metadata": {
        "id": "UxT6DHpnr3hZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x,[f2(i)for i in x])\n",
        "plt.axhline(0,color=\"black\")\n",
        "plt.axvline(0,color=\"black\")\n",
        "plt.xlim(-7,-2)\n",
        "plt.ylim(-10,10)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 269
        },
        "id": "W11B6aIWr_xk",
        "outputId": "d66f997e-962c-41be-ba46-ebad03f7286f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "8pO5K_yM_bnB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X=np.linspace(-4.0,-3.9,11)\n",
        "for x in X:\n",
        "  print(x,f2(x))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "M740g-FEw2IJ",
        "outputId": "262edf92-38f1-408d-d96c-f684d676c6a7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "-4.0 9.999999999976694e-05\n",
            "-3.99 -0.009897670700771855\n",
            "-3.98 -0.01989528714519473\n",
            "-3.9699999999999998 -0.029892848069476674\n",
            "-3.96 -0.0398903521803855\n",
            "-3.95 -0.04988779815456956\n",
            "-3.94 -0.05988518463785031\n",
            "-3.9299999999999997 -0.06988251024450642\n",
            "-3.92 -0.07987977355653841\n",
            "-3.91 -0.08987697312291854\n",
            "-3.9 -0.09987410745882075\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def f3(x):\n",
        "  return x**3+4*x**2-10"
      ],
      "metadata": {
        "id": "5x0TAbQD_c9J"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x=np.linspace(1,2,50)"
      ],
      "metadata": {
        "id": "BgnxnBcx_mth"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x,[f3(i)for i in x])\n",
        "plt.axhline(0,color=\"black\")\n",
        "plt.axvline(0,color=\"black\")\n",
        "plt.xlim(1,2)\n",
        "plt.ylim(-10,10)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 269
        },
        "id": "22z3qo7L_nGo",
        "outputId": "440e0447-739a-4e68-926c-edfe686c2b5d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X=np.linspace(1.3125,1.375,3)\n",
        "for x in X:\n",
        "  print(x,f3(x))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "O0HJ-GdZ_nh_",
        "outputId": "ef8a2b0f-eeef-4563-a4d4-7b404120cffa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1.3125 -0.848388671875\n",
            "1.34375 -0.350982666015625\n",
            "1.375 0.162109375\n"
          ]
        }
      ]
    }
  ]
}
